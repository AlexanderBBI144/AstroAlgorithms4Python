'''Meeus: Astronomical Algorithms (2nd ed.), chapter 47''' 

import math

from nutation_ecliptic import nutation
from coordinates import ecl2eq

def position(jd,full=False):
    '''equatorial geocentric coordinates of Moon'''
    T=(jd-2451545)/36525.
    
    L=math.radians(218.3164477+481267.88123421*T-0.0015786*T**2+T**3/538841.-T**4/65194000.)
    D=math.radians(297.8501921+445267.1114034*T-0.0018819*T**2+T**3/545868.-T**4/113065000.)
    M=math.radians(357.5291092+35999.0502909*T-0.0001536*T**2+T**3/24490000.)
    Mm=math.radians(134.9633964+477198.8675055*T+0.0087414*T**2+T**3/69699.-T**4/14712000.)
    F=math.radians(93.2720950+483202.0175233*T-0.0036539*T**2-T**3/3526000.+T**4/863310000.)
    
    A1=math.radians(119.75+131.849*T)
    A2=math.radians(53.09+479264.290*T)
    A3=math.radians(313.45+481266.484*T)
    
    E=1-0.002516*T-0.0000047*T**2
    
    args=[[0,0,1,0],[2,0,-1,0],[2,0,0,0],[0,0,2,0],[0,1,0,0],[0,0,0,2],[2,0,-2,0],[2,-1,-1,0],[2,0,1,0],[2,-1,0,0],[0,1,-1,0],[1,0,0,0],[0,1,1,0],[2,0,0,-2],[0,0,1,2],[0,0,1,-2],[4,0,-1,0],\
          [0,0,3,0],[4,0,-2,0],[2,1,-1,0],[2,1,0,0],[1,0,-1,0],[1,1,0,0],[2,-1,1,0],[2,0,2,0],[4,0,0,0],[2,0,-3,0],[0,1,-2,0],[2,0,-1,2],[2,-1,-2,0],[1,0,1,0],[2,-2,0,0],[0,1,2,0],[0,2,0,0],\
          [2,-2,-1,0],[2,0,1,-2],[2,0,0,2],[4,-1,-1,0],[0,0,2,2],[3,0,-1,0],[2,1,1,0],[4,-1,-2,0],[0,2,-1,0],[2,2,-1,0],[2,1,-2,0],[2,-1,0,-2],[4,0,1,0],[0,0,4,0],[4,-1,0,0],[1,0,-2,0],\
          [2,1,0,-2],[0,0,2,-2],[1,1,1,0],[3,0,-2,0],[4,0,-3,0],[2,-1,2,0],[0,2,1,0],[1,1,-1,0],[2,0,3,0],[2,0,-1,-2]]
    argsb=[[0,0,0,1],[0,0,1,1],[0,0,1,-1],[2,0,0,-1],[2,0,-1,1],[2,0,-1,-1],[2,0,0,1],[0,0,2,1],[2,0,1,-1],[0,0,2,-1],[2,-1,0,-1],[2,0,-2,-1],[2,0,1,1],[2,1,0,-1],[2,-1,-1,1],[2,-1,0,1],\
          [2,-1,-1,-1],[0,1,-1,-1],[4,0,-1,-1],[0,1,0,1],[0,0,0,3],[0,1,-1,1],[1,0,0,1],[0,1,1,1],[0,1,1,-1],[0,1,0,-1],[1,0,0,-1],[0,0,3,1],[4,0,0,-1],[4,0,-1,1],[0,0,1,-3],[4,0,-2,1],\
          [2,0,0,-3],[2,0,2,-1],[2,-1,1,-1],[2,0,-2,1],[0,0,3,-1],[2,0,2,1],[2,0,-3,-1],[2,1,-1,1],[2,1,0,1],[4,0,0,1],[2,-1,1,1],[2,-2,0,-1],[0,0,1,3],[2,1,1,-1],[1,1,0,-1],[1,1,0,1],\
          [0,1,-2,-1],[2,1,-1,-1],[1,0,1,1],[2,-1,-2,-1],[0,1,2,1],[4,0,-2,-1],[4,-1,-1,-1],[1,0,1,-1],[4,0,1,-1],[1,0,-1,-1],[4,-1,0,-1],[2,-2,0,1]]
    args1=[D,M,Mm,F]
    
    sinC=[6288774,1274027,658314,213618,-185116,-114332,58793,57066,53322,45758,-40923,-34720,-30383,15327,-12528,10980,10675,10034,8548,-7888,-6766,-5163,4987,4036,3994,3861,3665,-2689,-2602,\
        2390,-2348,2236,-2120,-2069,2048,-1773,-1595,1215,-1110,-892,-810,759,-713,-700,691,596,549,537,520,-487,-399,-381,351,-340,330,327,-323,299,294,0]
    cosC=[-20905355,-3699111,-2955968,-569925,48888,-3149,246158,-152138,-170733,-204586,-129620,108743,104755,10321,0,79661,-34782,-23210,-21636,24208,30824,-8379,-16675,-12831,-10445,-11650,\
        14403,-7003,0,10056,6322,-9884,5751,0,-4950,4130,0,-3958,0,3258,2616,-1897,-2117,2354,0,0,-1423,-1117,-1571,-1739,0,-4421,0,0,0,0,1165,0,0,8752]    
    bC=[5128122,280602,277693,173237,55413,46271,32573,17198,9266,8822,8216,4324,4200,-3359,2463,2211,2065,-1870,1828,-1794,-1749,-1565,-1491,-1475,-1410,-1344,-1335,1107,1021,833,777,671,607,\
        596,491,-451,439,422,421,-366,-351,331,315,302,-283,-229,223,223,-220,-220,-185,181,-177,176,166,-164,132,-119,115,107]
       
    l=0
    r=0 
    b=0 
    for i in range(len(args)):
        tmp=0
        tmpb=0
        for j in range(len(args1)): 
            tmp+=args[i][j]*args1[j]
            tmpb+=argsb[i][j]*args1[j]
        coefE=1
        if abs(args[i][1])==1: coefE=E
        elif abs(args[i][1])==2: coefE=E**2
        l+=sinC[i]*math.sin(tmp)*coefE
        r+=cosC[i]*math.cos(tmp)*coefE
        coefE=1
        if abs(argsb[i][1])==1: coefE=E
        elif abs(argsb[i][1])==2: coefE=E**2
        b+=bC[i]*math.sin(tmpb)*coefE
        
    l+=3958*math.sin(A1)+1962*math.sin(L-F)+318*math.sin(A2)
    b+=-2235*math.sin(L)+382*math.sin(A3)+175*math.sin(A1-F)+175*math.sin(A1+F)+127*math.sin(L-Mm)-115*math.sin(L+Mm)
    
    lon=(math.degrees(L)+l/1e6)%360
    lat=b/1e6
    dist=385000.56+r/1000.
    
    par=math.degrees(math.asin(6378.14/dist))
    
    psi,eps=nutation(jd)    
    lon+=psi

    ra,dec=ecl2eq(lon,lat)
    
    if full: return ra,dec,lon,lat,dist,par
    return ra,dec
    
    
    
    